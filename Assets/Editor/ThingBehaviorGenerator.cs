using System;
using System.IO;
using System.Reflection;
using UnityEditor;
using UnityEngine;

public static class ThingBehaviorGenerator
{
    private const string Path = "Assets/Scripts/AutoGenerated/";
    private const string Postfix = "Behavior";

    private const string Template = @"
    namespace AutoGenerated
    {{
        public class {0} : ThingBehavior<{1}, {2}>{{}}
    }}
    ";

    [MenuItem("Tools/生成Thing的MonoBehavior版本")]
    public static void CreateThingBehavior()
    {
        Type baseType = typeof(BaseThing<>);

        //check if directory exists
        if (!Directory.Exists(Path))
        {
            Directory.CreateDirectory(Path);
        }

        //remove all files in directory
        string[] files = Directory.GetFiles(Path);
        foreach (string file in files)
        {
            File.Delete(file);
        }

        Type[] types = baseType.Assembly.GetTypes();
        foreach (Type type in types)
        {
            if(type.IsAbstract || type.IsInterface || type.IsGenericType)
            {
                continue;
            }

            Type curBaseType = type.BaseType;

            //find BaseThing<> recursively
            while (curBaseType != null && curBaseType.IsGenericType && curBaseType.GetGenericTypeDefinition() != baseType)
            {
                curBaseType = curBaseType.BaseType;
            }

            if (curBaseType == null || !curBaseType.IsGenericType || curBaseType.GetGenericTypeDefinition() != baseType)
            {
                continue;
            }

            Debug.Log(TextColor.Green("生成MonoBehavior: " + type.Name));

            string name = type.Name;
            //the _config is the generic type of BaseThing<>
            string configName = type.BaseType.GetGenericArguments()[0].Name;
            string fileName = name + Postfix + ".cs";
            string filePath = Path + fileName;
            string content = string.Format(Template, name + Postfix, name, configName);
            File.WriteAllText(filePath, content);
            AssetDatabase.Refresh();
        }

    }
}
